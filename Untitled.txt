import pandas as pd
import numpy as np
import pickle

# Create a DataFrame with random 0 or 1 values for demonstration
np.random.seed(0)  # For reproducibility
stock_names = [f'Stock{i+1}' for i in range(40)]
criteria = [f'Criterion {i+1}' for i in range(4)]
data = np.random.randint(0, 2, size=(40, 4))
df = pd.DataFrame(data, index=stock_names, columns=criteria)

def dfs_select_stocks(df, select_count=10, max_size=10000):
    def dfs(path, index):
        if len(valid_combinations) >= max_size:
            save_combinations(valid_combinations, file_count[0])
            file_count[0] += 1
            valid_combinations.clear()

        if len(path) == select_count:
            if all(0 <= df.loc[path, criterion].sum() <= 5 for criterion in criteria):
                valid_combinations.append(path.copy())
            return

        for i in range(index, len(df)):
            path.append(df.index[i])
            dfs(path, i + 1)
            path.pop()

    def save_combinations(combinations, count):
        filename = f'valid_combinations_{count}.pkl'
        with open(filename, 'wb') as f:
            pickle.dump(combinations, f)
        print(f'Saved {len(combinations)} combinations to {filename}')

    valid_combinations = []
    file_count = [1]  # To keep track of file numbering
    dfs([], 0)

# Find valid combinations
dfs_select_stocks(df)
